# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
#      - name: Extract Maven project version
#        id: extract-version
#        run: echo "::set-output name=VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
#
#      - name: Extract Maven repository
#        id: extract-repository
#        run: echo "::set-output name=REPOSITORY::$(mvn help:evaluate -Dexpression=docker.repository -q -DforceStdout)"

      - name: Build with Maven
        run: mvn -B clean package -DskipTests --file pom.xml

#      - name: Log in to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

#      - name: Push the Docker image
#        run: docker push ${{ steps.extract-repository.outputs.REPOSITORY }}:${{ steps.extract-version.outputs.VERSION }}
#
#      - name: Set up SSH key
#        uses: webfactory/ssh-agent@v0.5.3
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: Deploy using docker-compose on remote server
#        run: |
#          ssh -o StrictHostKeyChecking=no root@${{ secrets.SSH_REMOTE_URL }} "cd ${{ secrets.SSH_REMOTE_PATH }} && docker pull ${{ steps.extract-repository.outputs.REPOSITORY }}:${{ steps.extract-version.outputs.VERSION }} && docker-compose -f start.yml up -d"
